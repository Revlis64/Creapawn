#pragma once

const unsigned char PROGMEM plusSign[]
{
  24, 24, 24, 255, 255, 24, 24, 24,
};

const unsigned char PROGMEM theText[]
{
  0x30, 0x30, 0x18, 0xf8, 0xfc, 0x0c, 0x06, 0x06, 0xf0, 0xf8, 0x00, 0x00, 0x80, 0xc0, 0xfc, 0xfe, 0x00, 0xf0, 0xf8, 0x8c, 0x86, 0x06, 0x3e, 0x1c, 0x00, 
  0x00, 0x00, 0x00, 0x7f, 0x7f, 0x00, 0x00, 0x00, 0x7f, 0x7f, 0x06, 0x03, 0x01, 0x00, 0x7f, 0x7f, 0x00, 0x1e, 0x3f, 0x61, 0x60, 0x60, 0x30, 0x1c, 0x0e, 
};

const unsigned char PROGMEM endText[]
{
  0xf0, 0xf8, 0x8c, 0x86, 0x06, 0x3e, 0x1c, 0x00, 0x00, 0xf0, 0xf8, 0x18, 0xf8, 0xf0, 0x00, 0xfc, 0xfe, 0x00, 0x08, 0xc4, 0xe6, 0x06, 0x06, 0x0e, 0xfc, 0xf8, 
  0x1e, 0x3f, 0x61, 0x60, 0x60, 0x30, 0x1c, 0x0e, 0x00, 0x7f, 0x7f, 0x00, 0x3f, 0x7f, 0x60, 0x7f, 0x7f, 0x00, 0x00, 0x7f, 0x7f, 0x60, 0x60, 0x70, 0x3f, 0x1f, 
};

const unsigned char PROGMEM logo[]
{
  0x80, 0xe0, 0x78, 0x1c, 0x86, 0x7e, 0x3c, 0x00, 0x08, 0xc4, 0xe6, 0x06, 0x06, 0x8e, 0xfc, 0xf8, 0x00, 0xf0, 0xf8, 0x8c, 0x86, 0x06, 0x3e, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x70, 0x1c, 0x8e, 0xfe, 0x00, 0x08, 0xc4, 0xe6, 0x06, 0x06, 0x8e, 0xfc, 0xf8, 0x00, 0x00, 0xc0, 0x70, 0x1c, 0x8e, 0xfe, 0x00, 0xf0, 0xf8, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xfe, 0x00, 0xf0, 0xf8, 0x18, 0xf8, 0xf0, 0x00, 0xfc, 0xfe, 
  0x1f, 0x3f, 0x60, 0x60, 0x60, 0x30, 0x1c, 0x0e, 0x00, 0x7f, 0x7f, 0x03, 0x0f, 0x3f, 0x71, 0x40, 0x00, 0x1e, 0x3f, 0x61, 0x60, 0x60, 0x30, 0x1c, 0x0e, 0x00, 0x70, 0x7c, 0x1f, 0x07, 0x07, 0x03, 0x7f, 0x7f, 0x00, 0x00, 0x7f, 0x7f, 0x03, 0x03, 0x03, 0x01, 0x70, 0x7c, 0x1f, 0x07, 0x07, 0x03, 0x7f, 0x7f, 0x00, 0x3f, 0x7f, 0x60, 0x38, 0x3c, 0x60, 0x7f, 0x3f, 0x00, 0x7f, 0x7f, 0x00, 0x3f, 0x7f, 0x60, 0x7f, 0x7f, 
};

const unsigned char PROGMEM bossLair[4][64]
{
  //office building (synth)
  {
    0xf8, 0x08, 0x10, 0x08, 0x38, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3e, 0x22, 0x3e, 0x20, 0x3f, 0x21, 0x3f, 0x08, 0x10, 0x08, 0xf8, 0x08, 0x10, 0x08, 0x38, 0x20, 0x20, 0x38, 0x08, 0x10, 0x08, 0xf8, 
    0xff, 0x80, 0x9b, 0x9b, 0x80, 0x9b, 0x9b, 0x80, 0xf3, 0x8b, 0xf8, 0x8b, 0xf3, 0x80, 0x9b, 0x9b, 0x80, 0x9b, 0x9b, 0x80, 0xff, 0x80, 0x9b, 0x9b, 0x80, 0x9b, 0x9b, 0x80, 0x9b, 0x9b, 0x80, 0xff, 
  },
  //tree (nature)
  {
    0x80, 0x60, 0x38, 0x44, 0x4a, 0x2a, 0x25, 0x49, 0x49, 0x25, 0x25, 0x49, 0x49, 0x25, 0x25, 0x49, 0x49, 0x25, 0x25, 0x49, 0x49, 0x25, 0x25, 0x49, 0x49, 0x25, 0x2a, 0x4a, 0x44, 0x38, 0x60, 0x80, 
    0x01, 0x02, 0x01, 0x82, 0x42, 0xbe, 0x01, 0x92, 0x2a, 0x91, 0x01, 0xe2, 0x12, 0x09, 0x09, 0x12, 0xe2, 0x01, 0x91, 0x2a, 0x92, 0x01, 0x81, 0x02, 0x82, 0x01, 0xbe, 0x42, 0x82, 0x01, 0x02, 0x01, 
  },
  //church (mystic)
  {
    0x20, 0xe0, 0x10, 0x08, 0x84, 0x0c, 0x14, 0x4c, 0xa4, 0x12, 0x09, 0x13, 0xa5, 0x49, 0x11, 0x09, 0x85, 0x0d, 0x15, 0xe5, 0x25, 0x25, 0xa5, 0x25, 0x25, 0x25, 0x26, 0xa4, 0x24, 0x28, 0xf0, 0x20, 
    0x00, 0xff, 0x80, 0x9f, 0x90, 0x9f, 0x80, 0xf0, 0x88, 0x89, 0xfa, 0x89, 0x88, 0xf0, 0x80, 0x9f, 0x90, 0x9f, 0x80, 0xff, 0x80, 0x9f, 0x90, 0x9f, 0x80, 0x80, 0x9f, 0x90, 0x9f, 0x80, 0xff, 0x00, 
  },
  //castle (finale)
  {
    0x38, 0xc8, 0x10, 0x8f, 0x13, 0xcb, 0xbb, 0x00, 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0xb8, 0xc8, 0x10, 0x8f, 0x13, 0xcb, 0xbb, 0x80, 0x00, 0x00, 0x80, 0xb8, 0xc8, 0x10, 0x8f, 0x13, 0xcb, 0x3b, 
    0x00, 0xff, 0x80, 0x99, 0x80, 0xff, 0x80, 0x81, 0xf1, 0x88, 0xf8, 0x88, 0xf1, 0x81, 0x80, 0xff, 0x80, 0x99, 0x80, 0xff, 0x80, 0x98, 0x81, 0x81, 0x98, 0x80, 0xff, 0x80, 0x99, 0x80, 0xff, 0x00, 
  },
};

const unsigned char PROGMEM enemyWalkCycleForeground[12][24]
{
  //crook (synth)
  {
    0x00, 0x98, 0xf4, 0x54, 0x54, 0x34, 0x54, 0x54, 0x74, 0xf8, 0x60, 0x00, 
    0x00, 0x39, 0x32, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3d, 0x39, 0x76, 0x00, 
  },
  {
    0x00, 0x0c, 0x7a, 0xaa, 0xaa, 0x9a, 0xaa, 0xaa, 0xba, 0x7c, 0x30, 0x00, 
    0x00, 0x02, 0x45, 0x7f, 0x7f, 0x1f, 0x5f, 0x7d, 0x7c, 0x07, 0x00, 0x00, 
  },
  {
    0x00, 0x18, 0xf4, 0x54, 0x54, 0x34, 0x54, 0xd4, 0x74, 0xf8, 0x60, 0x00, 
    0x00, 0x38, 0x30, 0x3f, 0x3f, 0x3f, 0x3f, 0x3c, 0x3d, 0x3f, 0x70, 0x00, 
  },

  //zoologist (nature)
  {
    0x00, 0x88, 0xf8, 0x2c, 0x5c, 0x2c, 0x5c, 0x2c, 0x2c, 0x98, 0x68, 0x00,
    0x00, 0x39, 0x32, 0x3f, 0x31, 0x3f, 0x31, 0x33, 0x35, 0x39, 0x76, 0x00,
  },
  {
    0x00, 0x04, 0x7c, 0x96, 0xae, 0x96, 0xae, 0x96, 0x96, 0x4c, 0x34, 0x00,
    0x00, 0x02, 0x45, 0x7f, 0x78, 0x1f, 0x5a, 0x7d, 0x7c, 0x07, 0x00, 0x00,
  },
  {
    0x00, 0x08, 0xf8, 0x2c, 0x5c, 0x2c, 0x5c, 0xac, 0x2c, 0x98, 0x68, 0x00,
    0x00, 0x38, 0x30, 0x3f, 0x31, 0x3f, 0x33, 0x34, 0x35, 0x3f, 0x70, 0x00,
  },

  //cultist (mystic)
  {
    0x00, 0x30, 0xe8, 0x64, 0x24, 0x64, 0x24, 0xc4, 0x04, 0x88, 0x70, 0x00, 
    0x00, 0x04, 0x0a, 0x7f, 0x41, 0x7f, 0x45, 0x4a, 0x49, 0x5e, 0x60, 0x00, 
  },
  {
    0x00, 0x18, 0x74, 0xb2, 0x92, 0xb2, 0x92, 0x62, 0x82, 0x44, 0x38, 0x00, 
    0x00, 0x02, 0x05, 0x7f, 0x40, 0x7f, 0x42, 0x45, 0x4c, 0x57, 0x60, 0x00, 
  },
  {
    0x00, 0x30, 0xe8, 0x64, 0x24, 0x64, 0x24, 0xc4, 0x04, 0x88, 0x70, 0x00, 
    0x00, 0x04, 0x0a, 0x7f, 0x41, 0x7f, 0x45, 0x4a, 0x49, 0x5e, 0x60, 0x00, 
  },


  //guard (finale)
  {
    0x00, 0x80, 0xfc, 0x24, 0x64, 0x64, 0x24, 0x24, 0x04, 0xfc, 0x00, 0x00, 
    0x00, 0x39, 0x32, 0x3f, 0x21, 0x21, 0x21, 0x23, 0x35, 0x39, 0x76, 0x00, 
  },
  {
    0x00, 0x00, 0x7e, 0x92, 0xb2, 0xb2, 0x92, 0x92, 0x82, 0x7e, 0x00, 0x00, 
    0x00, 0x02, 0x45, 0x7f, 0x70, 0x10, 0x52, 0x75, 0x7c, 0x07, 0x00, 0x00, 
  },
  {
    0x00, 0x00, 0xfc, 0x24, 0x64, 0x64, 0x24, 0xa4, 0x04, 0xfc, 0x00, 0x00, 
    0x00, 0x38, 0x30, 0x3f, 0x21, 0x21, 0x23, 0x24, 0x35, 0x3e, 0x70, 0x00, 
  },
};



const unsigned char PROGMEM enemyWalkCycleBackground[12][24]
{  
  //crook (synth)
  {
    0x98, 0xfc, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfc, 0xf8, 0x60, 
    0x39, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0xff, 0x76, 
  },
  {
    0x0c, 0x7e, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7c, 0x30, 
    0x02, 0x47, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0x7f, 0x07, 0x00, 
  },
  {
    0x18, 0xfc, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfc, 0xf8, 0x60, 
    0x38, 0x7c, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0xff, 0x70,
  },

  //zoologist (nature)
  {
    0x88, 0xfc, 0xfc, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfc, 0xfc, 0x68,
    0x39, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0xff, 0x76,

  },
  {
    0x04, 0x7e, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7e, 0x34,
    0x02, 0x47, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0x7f, 0x07, 0x00,
  },
  {
    0x08, 0xfc, 0xfc, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfc, 0xfc, 0x68,
    0x38, 0x7c, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0xfe, 0x70,
  },

  //cultist (mystic)
  {
    0x30, 0xf8, 0xfc, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfc, 0xf8, 0x70, 
    0x04, 0x0e, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x60, 
  },
  {
    0x18, 0x7c, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7c, 0x38, 
    0x02, 0x07, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0x60, 
  },
  {
    0x30, 0xf8, 0xfc, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfc, 0xf8, 0x70, 
    0x04, 0x0e, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x60, 
  },


  //guard (finale)
  {
    0x80, 0xfc, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfc, 0x00, 
    0x39, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0xff, 0x76, 
  },
  {
    0x00, 0x7e, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7e, 0x00, 
    0x02, 0x47, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0x7f, 0x07, 0x00, 
  },
  {
    0x00, 0xfc, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfc, 0x00, 
    0x38, 0x7c, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0xfe, 0x70, 
  },
};



const unsigned char PROGMEM playerWalkCycleForeground[3][24]
{
  {
    0x00, 0x70, 0x98, 0x3c, 0x1c, 0x7c, 0x1c, 0x7c, 0x38, 0xd0, 0x90, 0x00,
    0x00, 0x76, 0x39, 0x2d, 0x2f, 0x2f, 0x29, 0x2f, 0x2f, 0x32, 0x39, 0x00, 
  },

  {
    0x00, 0x38, 0x4c, 0x9e, 0x8e, 0xbe, 0x8e, 0xbe, 0x9c, 0x68, 0x08, 0x00,
    0x00, 0x00, 0x07, 0x7c, 0x65, 0x57, 0x14, 0x67, 0x7f, 0x45, 0x02, 0x00,
  },

  {
    0x00, 0x70, 0x98, 0x3c, 0x9c, 0x7c, 0x1c, 0x7c, 0x38, 0xd0, 0x10, 0x00,
    0x00, 0x70, 0x3f, 0x2d, 0x2c, 0x2f, 0x29, 0x2f, 0x2f, 0x30, 0x38, 0x00, 
  },
};

const unsigned char PROGMEM playerWalkCycleBackground[3][24]
{
  {
    0x70, 0xf8, 0xfc, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfc, 0xf8, 0xf8, 0x90, 
    0x76, 0xff, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x39,
  },

  {
    0x38, 0x7c, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfc, 0x7c, 0x08, 
    0x00, 0x07, 0x7f, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0x47, 0x02,
  },

  {
    0x70, 0xf8, 0xfc, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfc, 0xf8, 0xf8, 0x10, 
    0x70, 0xff, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7c, 0x38,
  },
};


const unsigned char PROGMEM background[4][32]
{
  //city (synth)
  {
    0xfc, 0x04, 0x54, 0x04, 0xfc, 0x80, 0xf0, 0x10, 0x50, 0x10, 0x50, 0x10, 0x50, 0x10, 0x50, 0x10, 0xf0, 0x80, 0xff, 0x01, 0x55, 0x01, 0x55, 0x01, 0xff, 0x80, 0xfc, 0x04, 0x54, 0x04, 0xfc, 0x80, 
  },
  //forest (nature)
  {
    0x8c, 0x52, 0x91, 0xf1, 0x91, 0x52, 0x8c, 0x40, 0x8c, 0x52, 0x91, 0xf1, 0x91, 0x52, 0x8c, 0x40, 0x8c, 0x52, 0x91, 0xf1, 0x91, 0x52, 0x8c, 0x40, 0x8c, 0x52, 0x91, 0xf1, 0x91, 0x52, 0x8c, 0x40, 
  },
  //mountains (mystic)
  {
    0x80, 0x40, 0x20, 0x30, 0x30, 0x10, 0x18, 0x38, 0x3c, 0x3c, 0x18, 0x10, 0x30, 0x48, 0x84, 0x02, 0x01, 0x03, 0x07, 0x07, 0x06, 0x0c, 0x1c, 0x0c, 0x88, 0x50, 0xe0, 0x70, 0x70, 0x20, 0x40, 0x80, 
  },
  //castle walls (finale)
  {
    0xff, 0xff, 0xfe, 0xfe, 0xff, 0xff, 0xf0, 0xf0, 0xf8, 0xf8, 0xf8, 0xf0, 0xf0, 0xf8, 0xf8, 0xf8, 0xf0, 0xf0, 0xf8, 0xf8, 0xf8, 0xf0, 0xf0, 0xf8, 0xf8, 0xf8, 0xf0, 0xf0, 0xf8, 0xf8, 0xf8, 0xf0,
  },
};


const unsigned char PROGMEM plant[]
{
  2, 5, 5, 14, 5, 5, 2, 0,
};

const unsigned char PROGMEM inn[]
{
  0x00, 0x80, 0xc0, 0xa0, 0xa1, 0x9f, 0x9f, 0x8f, 0x89, 0x84, 0x84, 0x84, 0x84, 0x8c, 0x8c, 0x94, 0x94, 0xa4, 0xa4, 0xc4, 0xc4, 0x84, 0x08, 0x08, 0x10, 0x10, 0x20, 0x20, 0x40, 0xc0, 0x80, 0x00, 
  0x01, 0x01, 0xff, 0x80, 0xb0, 0xb0, 0x80, 0xff, 0x80, 0xf8, 0x88, 0x88, 0xf8, 0x80, 0xff, 0x80, 0xb0, 0xb0, 0x80, 0xff, 0x81, 0xb1, 0xb1, 0xb1, 0x81, 0xb1, 0xb1, 0xb1, 0x81, 0xff, 0x01, 0x01, 
};

const unsigned char PROGMEM boardCursorBackground[]
{
  24, 28, 30, 31, 31, 0 ,0 ,0 ,0 ,0 ,0 , 31, 31, 30, 28, 24,
  24, 56, 120, 248, 248, 0, 0, 0, 0, 0, 0, 248, 248, 120, 56, 24,
};

const unsigned char PROGMEM boardCursorForeground[]
{
  0, 8, 12, 14, 0, 0, 0, 0, 0, 0, 0, 0, 14, 12, 8, 0,
  0, 16, 48, 112, 0, 0, 0, 0, 0, 0, 0, 0, 112, 48, 16, 0,
};

const unsigned char PROGMEM upTriangle[]
{
  4, 6, 7, 6, 4, 0, 0, 0,
};

const unsigned char PROGMEM downTriangle[]
{
  1, 3, 7, 3, 1, 0, 0, 0,
};

const unsigned char PROGMEM hit[]
{
  59, 120, 123, 96, 107, 104, 59, 0,
};

const unsigned char PROGMEM boardCross[]
{
 195, 231, 126, 60, 60, 126, 231, 195
};

const unsigned char PROGMEM boardCircle[]
{
 60, 126, 231, 195, 195, 231, 126, 60
};

const unsigned char PROGMEM specialAttackSprite[7][8]
{

  //sacrifice
  {
    60, 54, 127, 111, 127, 54, 60, 0,
  },
 
  //shockWave
  {
    65, 34, 93, 34, 93, 34, 28, 0,
  },

   //swap
  {
    4, 8, 87, 99, 117, 8, 16, 0,
  },

  //blast
  {
    42, 85, 65, 65, 65, 34, 28, 0,
  },
  //Strike
  {
    63, 127, 71, 119, 0, 85, 85, 0,
  },

  //endure
  {
    31, 33, 73, 93, 73, 33, 31, 0,
  },

  //healAll
  {
    14, 17, 33, 66, 33, 17, 14, 0,
  },

};

  const unsigned char PROGMEM end[]
  {
    15, 11, 11, 9, 60, 8, 16, 60, 120, 72, 72, 48,
  };

  const unsigned char PROGMEM move[]
  {
    3, 125, 109, 117, 117, 115, 96, 0,
  };

  const unsigned char PROGMEM questionMark[]
  {
    6, 3, 1, 89, 9, 15, 6, 0,
  };


const unsigned char PROGMEM pawnSprite[32][32]
{

// NULL //
  //VOIDISMAL
  {
    0x00, 0x00, 0xc0, 0xe0, 0xf0, 0xf8, 0xfc, 0xfc, 0xfc, 0xfc, 0xf8, 0xf0, 0xe0, 0xc0, 0x00, 0x00, 
    0x00, 0x00, 0x0f, 0x1f, 0x3f, 0x3d, 0x3f, 0x3d, 0x3f, 0x3f, 0x3d, 0x3f, 0x1d, 0x0f, 0x00, 0x00, 
  },

// SYNTH //
  //AUDIOUSE
  {
    0x00, 0x78, 0xe8, 0x78, 0x00, 0x38, 0x44, 0xd4, 0x04, 0x58, 0x14, 0x94, 0x58, 0x60, 0x80, 0x00, 
    0x00, 0x00, 0x07, 0x08, 0x10, 0x10, 0x1e, 0x21, 0x40, 0x48, 0x2c, 0x20, 0x42, 0x5a, 0x6d, 0x00, 
  },
  //BOLTNETIC
  {
    0x00, 0xc0, 0xc0, 0x40, 0x9e, 0x12, 0xf2, 0x5a, 0xf4, 0x1a, 0x9e, 0x40, 0xc0, 0xc0, 0x00, 0x00, 
    0x00, 0x0c, 0x0c, 0x0b, 0x04, 0x03, 0x3f, 0x55, 0x3f, 0x03, 0x04, 0x0b, 0x0c, 0x0c, 0x00, 0x00, 
  },
  //DRIBBY
  {
    0x00, 0x00, 0x00, 0xf0, 0x08, 0x64, 0x66, 0x86, 0x8e, 0x84, 0x68, 0x70, 0xc0, 0x00, 0x00, 0x00, 
    0x00, 0x06, 0x09, 0x68, 0x56, 0x50, 0x60, 0x21, 0x22, 0x61, 0x50, 0x51, 0x6e, 0x09, 0x06, 0x00, 
  },
  //LUMINAT
  {
    0x00, 0x70, 0x90, 0x20, 0xf8, 0x24, 0x52, 0x22, 0x02, 0x22, 0x54, 0xf8, 0x20, 0x90, 0x70, 0x00, 
    0x00, 0x0c, 0x10, 0x17, 0x0d, 0x05, 0x4d, 0x35, 0x05, 0x7d, 0x05, 0x0d, 0x17, 0x10, 0x0c, 0x00, 
  },
  //MICRUNT
  {
    0x00, 0x00, 0x00, 0x00, 0xc0, 0x20, 0x10, 0x98, 0x14, 0x10, 0xa8, 0xc4, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x0e, 0x0d, 0x43, 0x64, 0x78, 0x08, 0x0b, 0x7b, 0x64, 0x43, 0x0d, 0x0e, 0x00, 0x00, 
  },
  //ODRION
  {
    0x00, 0x80, 0x40, 0xa0, 0x50, 0x08, 0x4a, 0x84, 0x8a, 0x48, 0x90, 0xa0, 0xc0, 0x00, 0x00, 0x00, 
    0x00, 0x0f, 0x10, 0x2f, 0x50, 0x40, 0x40, 0x48, 0x45, 0x64, 0x54, 0x25, 0x19, 0x0e, 0x00, 0x00, 
  },
  //OUTLECTRIC
  {
    0x00, 0x00, 0x60, 0x90, 0x10, 0x38, 0x44, 0xfe, 0x82, 0x9a, 0xc2, 0x9a, 0x82, 0x7c, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x30, 0x29, 0x65, 0x26, 0x64, 0x28, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  },
  //SLUGAMMA
  {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xa0, 0xe0, 0x00, 0xc0, 0xa0, 0xe0, 0x00, 0x00, 
    0x00, 0x30, 0x48, 0x44, 0x4c, 0x42, 0x4f, 0x46, 0x52, 0x4a, 0x53, 0x52, 0x4a, 0x54, 0x38, 0x00, 
  },
  //SPYMERA
  {
    0x00, 0xc0, 0x20, 0x12, 0x0a, 0x8a, 0x4a, 0x2c, 0x2a, 0x2a, 0x4a, 0x92, 0x20, 0xc0, 0x00, 0x00, 
    0x00, 0x0f, 0x10, 0x20, 0x40, 0x47, 0x48, 0x50, 0x53, 0x53, 0x48, 0x27, 0x10, 0x0f, 0x00, 0x00, 
  },
  //XENAUCER
  {
    0x00, 0x80, 0x40, 0xa0, 0x70, 0x88, 0x24, 0x44, 0x14, 0x44, 0xa8, 0x70, 0xa0, 0x40, 0x80, 0x00, 
    0x00, 0x21, 0x32, 0x1c, 0x44, 0x6a, 0x39, 0x09, 0x09, 0x39, 0x6a, 0x44, 0x1c, 0x32, 0x21, 0x00, 
  },
  
// NATURE //
  //BEETHRONE
  {
    0x00, 0x30, 0x50, 0x90, 0x30, 0xd0, 0xa0, 0xc0, 0x3c, 0xb2, 0x30, 0x78, 0x30, 0xfc, 0x02, 0x00, 
    0x00, 0x01, 0x47, 0x2d, 0x1b, 0x4d, 0x3a, 0x0d, 0x5a, 0x25, 0x09, 0x04, 0x09, 0x07, 0x00, 0x00, 
  },
  //BUBBLUE
  {
    0x00, 0x18, 0xfc, 0x1c, 0x08, 0x44, 0xc6, 0xc6, 0x6e, 0x1e, 0xbe, 0x9c, 0x68, 0xd0, 0xe0, 0x00, 
    0x00, 0x06, 0x0f, 0x1f, 0x2f, 0x46, 0x40, 0x40, 0x46, 0x4d, 0x4a, 0x4a, 0x2d, 0x16, 0x0f, 0x00, 
  },
  //BUNNERINA
  {
    0x00, 0x00, 0x00, 0x00, 0xc0, 0x38, 0x84, 0x34, 0x24, 0xb8, 0xf4, 0x24, 0x38, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x14, 0x1a, 0x3f, 0x5a, 0x3a, 0x1a, 0x3b, 0x5a, 0x3e, 0x1b, 0x14, 0x00, 0x00, 0x00, 
  },
 //CHAMPANZON
  {
    0x00, 0x00, 0x00, 0x80, 0xd8, 0x7c, 0x56, 0x4a, 0xd6, 0x4a, 0x7c, 0xc0, 0x80, 0x00, 0x00, 0x00, 
    0x00, 0x06, 0x09, 0x0d, 0x63, 0x56, 0x7a, 0x1a, 0x15, 0x7a, 0x56, 0x63, 0x0d, 0x09, 0x06, 0x00, 
  },
  //CHLOROAR
  {
    0x00, 0x20, 0x50, 0xa0, 0x80, 0x00, 0x80, 0x60, 0x10, 0x68, 0x08, 0x88, 0x10, 0xa0, 0xc0, 0x00, 
    0x00, 0x00, 0x00, 0x01, 0x0e, 0x11, 0x2f, 0x40, 0x44, 0x59, 0x6e, 0x22, 0x66, 0x5a, 0x6d, 0x00, 
  },
  //CRIBBIT
  {
    0x00, 0xe0, 0x10, 0x08, 0x44, 0x52, 0xa2, 0x02, 0x02, 0x02, 0xa4, 0x58, 0x70, 0xc0, 0x00, 0x00, 
    0x00, 0x7d, 0x42, 0x56, 0x66, 0x4c, 0x6c, 0x2d, 0x25, 0x6d, 0x4c, 0x6e, 0x46, 0x5d, 0x60, 0x00, 
  },
  //DASHOUND
  {
    0x00, 0x60, 0xc0, 0x00, 0x80, 0x80, 0x80, 0x80, 0x9c, 0xb4, 0x48, 0xac, 0x0c, 0xb0, 0xc0, 0x00, 
    0x00, 0x78, 0x46, 0x51, 0x68, 0x59, 0x6a, 0x08, 0x79, 0x42, 0x58, 0x68, 0x5f, 0x61, 0x01, 0x00, 
  },
  //MAYHAM
  {
    0x00, 0xc0, 0x30, 0xb0, 0x80, 0x8c, 0xf2, 0x04, 0x28, 0x68, 0xac, 0xa8, 0x6c, 0xf2, 0x0c, 0x00, 
    0x00, 0x1e, 0x21, 0x40, 0x21, 0x20, 0x23, 0x26, 0x4b, 0x2a, 0x2b, 0x4b, 0x3a, 0x07, 0x00, 0x00, 
  },
  //NECRAWLER
  {
    0x00, 0x00, 0x00, 0xe0, 0x10, 0xc8, 0xc8, 0xd8, 0x28, 0x08, 0xc8, 0xd0, 0xe0, 0x00, 0x00, 0x00, 
    0x00, 0x0a, 0x05, 0x37, 0x0c, 0x71, 0x19, 0x25, 0x6c, 0x3c, 0x6d, 0x25, 0x1f, 0x70, 0x00, 0x00, 
  },
  //TERRUPTION
  {
    0x00, 0x00, 0xc0, 0x60, 0x20, 0x20, 0x10, 0x38, 0xc4, 0xb4, 0xa4, 0x84, 0x98, 0xe0, 0x00, 0x00, 
    0x00, 0x06, 0x09, 0x10, 0x38, 0x54, 0x56, 0x75, 0x37, 0x50, 0x50, 0x6f, 0x05, 0x06, 0x00, 0x00, 
  },

// MYSTIC //
  //CHIVAMPERA
  {
    0x00, 0xf0, 0x08, 0x04, 0x32, 0x4a, 0xa4, 0x10, 0x60, 0x18, 0xa4, 0xc2, 0x3a, 0x04, 0x00, 0x00, 
    0x00, 0x01, 0x02, 0x24, 0x48, 0x50, 0x61, 0x45, 0x42, 0x25, 0x19, 0x07, 0x00, 0x00, 0x00, 0x00, 
  },
  //DUALDRA
  {
    0x00, 0xe0, 0xf0, 0x08, 0xc4, 0x24, 0x46, 0x1c, 0x44, 0x2c, 0xf6, 0x1c, 0x44, 0x28, 0xf0, 0x00, 
    0x00, 0x03, 0x0d, 0x12, 0x24, 0x49, 0x42, 0x42, 0x46, 0x49, 0x42, 0x46, 0x3a, 0x01, 0x00, 0x00, 
  },
    //FAEFLUFF
  {
    0x00, 0x38, 0x44, 0x84, 0x04, 0x88, 0x50, 0x20, 0x30, 0x28, 0x94, 0x64, 0x44, 0xb8, 0x00, 0x00, 
    0x00, 0x06, 0x09, 0x10, 0x10, 0x0f, 0x10, 0x22, 0x23, 0x20, 0x24, 0x22, 0x13, 0x0f, 0x00, 0x00, 
  },
    //GRIFELIOS
  {
    0x00, 0xda, 0x34, 0x98, 0x40, 0x22, 0x26, 0xca, 0x32, 0x04, 0x24, 0x68, 0x90, 0x60, 0x80, 0x00, 
    0x00, 0x3d, 0x42, 0x51, 0x69, 0x59, 0x6a, 0x09, 0x71, 0x42, 0x54, 0x74, 0x5f, 0x61, 0x01, 0x00, 
  },
  //MAUROAH
  {
    0x00, 0xc0, 0x20, 0xc0, 0x00, 0xf0, 0xa8, 0xa4, 0xae, 0xb8, 0x84, 0xb8, 0xa4, 0xfe, 0x00, 0x00, 
    0x00, 0x3b, 0x44, 0x43, 0x52, 0x63, 0x24, 0x28, 0x49, 0x4c, 0x2a, 0x2c, 0x49, 0x57, 0x60, 0x00, 
  },
  //PEGSHIRE
  {
    0x00, 0x00, 0x80, 0xc0, 0x20, 0x10, 0x10, 0x30, 0x48, 0xf4, 0x0a, 0xa6, 0x0a, 0x26, 0xf8, 0x00, 
    0x00, 0x07, 0x08, 0x7f, 0x41, 0x39, 0x49, 0x7a, 0x0a, 0x79, 0x40, 0x38, 0x49, 0x7f, 0x00, 0x00, 
  },
  //POLTERROR
  {
    0x00, 0x00, 0xe0, 0x10, 0x08, 0xc4, 0xe4, 0xa2, 0x42, 0x02, 0x44, 0xa4, 0xe8, 0xd0, 0xe0, 0x00, 
    0x00, 0x0c, 0x17, 0x20, 0x72, 0x56, 0x76, 0x4c, 0x46, 0x4c, 0x46, 0x4c, 0x76, 0x56, 0x3b, 0x00, 
  },
  //RAVUACK
  {
    0x00, 0x80, 0x00, 0x80, 0xc0, 0x64, 0x7c, 0xfe, 0xee, 0xfe, 0x7e, 0xec, 0xe4, 0xc0, 0x80, 0x00, 
    0x00, 0x03, 0x07, 0x0d, 0x1a, 0x3b, 0x5b, 0x4b, 0x1b, 0x3d, 0x5f, 0x4e, 0x01, 0x01, 0x03, 0x00, 
  },
  //SCARDRA
  {
    0x00, 0xc0, 0x20, 0x10, 0x20, 0x40, 0xf0, 0xa8, 0xf4, 0x0a, 0x6e, 0x4a, 0x0c, 0x30, 0xc0, 0x00, 
    0x00, 0x1f, 0x08, 0x0c, 0x12, 0x26, 0x6c, 0x40, 0x4a, 0x5c, 0x73, 0x51, 0x5f, 0x6d, 0x00, 0x00, 
  },
  //SQUEAMASK
  {
    0x00, 0xc0, 0x08, 0x94, 0xe4, 0x12, 0xc8, 0x68, 0xc8, 0x08, 0xc8, 0x72, 0xe4, 0x14, 0xc8, 0x00, 
    0x00, 0x00, 0x01, 0x48, 0x35, 0x02, 0x04, 0x09, 0x08, 0x0e, 0x08, 0x05, 0x03, 0x35, 0x48, 0x00, 
  },

// OMNI //
  //TRIKURN
  {
    0x00, 0x00, 0xc0, 0x34, 0x4a, 0x74, 0x40, 0x34, 0x4a, 0x74, 0x40, 0xb4, 0x4a, 0x34, 0x00, 0x00, 
    0x00, 0x0f, 0x10, 0x20, 0x40, 0x42, 0x4b, 0x50, 0x50, 0x4a, 0x23, 0x10, 0x0f, 0x00, 0x00, 0x00, 
  }
};

const unsigned char PROGMEM pawnSpriteBackground[32][32]
{

// NULL //
  //VOIDISMAL
  {
    0x00, 0xc0, 0xe0, 0xf0, 0xf8, 0xfc, 0xfe, 0xfe, 0xfe, 0xfe, 0xfc, 0xf8, 0xf0, 0xe0, 0xc0, 0x00, 
    0x00, 0x0f, 0x1f, 0x3f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x3f, 0x1f, 0x0f, 0x00, 
  },
  //AUDIOUSE
  {
    0x78, 0xfc, 0xfc, 0xfc, 0xf8, 0xfc, 0xfe, 0xfe, 0xfe, 0xfc, 0xfe, 0xfe, 0xfc, 0xf8, 0xe0, 0x80, 
    0x00, 0x07, 0x0f, 0x1f, 0x3f, 0x3f, 0x3f, 0x7f, 0xff, 0xff, 0x7f, 0x7f, 0xff, 0xff, 0xff, 0x6d, 
  },
  //BOLTNETIC
  {
    0xc0, 0xe0, 0xe0, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xfe, 0xe0, 0xe0, 0xc0, 0x00, 
    0x0c, 0x1f, 0x1f, 0x1f, 0x0f, 0x3f, 0x7f, 0xff, 0x7f, 0x3f, 0x0f, 0x1f, 0x1f, 0x1f, 0x0c, 0x00, 
  },
  //DRIBBY
  {
    0x00, 0x00, 0xf0, 0xf8, 0xfc, 0xfe, 0xff, 0xff, 0xff, 0xfe, 0xfc, 0xf8, 0xf0, 0xc0, 0x00, 0x00, 
    0x06, 0x0f, 0x7f, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x7f, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x0f, 0x06, 
  },
  //LUMINAT
  {
    0x70, 0xf8, 0xf8, 0xf8, 0xfc, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfc, 0xf8, 0xf8, 0xf8, 0x70, 
    0x0c, 0x1e, 0x3f, 0x3f, 0x1f, 0x4f, 0xff, 0x7f, 0x7f, 0xff, 0x7f, 0x1f, 0x3f, 0x3f, 0x1e, 0x0c, 
  },
  //MICRUNT
  {
    0x00, 0x00, 0x00, 0xc0, 0xe0, 0xf0, 0xf8, 0xfc, 0xfe, 0xfc, 0xfc, 0xee, 0xc4, 0x00, 0x00, 0x00, 
    0x00, 0x0e, 0x1f, 0x5f, 0xff, 0xff, 0xff, 0x7f, 0x7f, 0xff, 0xff, 0xff, 0x5f, 0x1f, 0x0e, 0x00, 
  },
  //ODRION
  {
    0x80, 0xc0, 0xe0, 0xf0, 0xf8, 0xfe, 0xff, 0xfe, 0xff, 0xfe, 0xf8, 0xf0, 0xe0, 0xc0, 0x00, 0x00, 
    0x0f, 0x1f, 0x3f, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x3f, 0x1f, 0x0e, 0x00, 
  },
  //OUTLECTRIC
  {
    0x00, 0x60, 0xf0, 0xf8, 0xf8, 0xfc, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7c, 0x00, 
    0x00, 0x00, 0x30, 0x79, 0x7f, 0xff, 0x7f, 0xff, 0x7d, 0x79, 0x31, 0x01, 0x01, 0x00, 0x00, 0x00, 
  },
  //SLUGAMMA
  {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xe0, 0xf0, 0xf0, 0xe0, 0xe0, 0xf0, 0xf0, 0xe0, 0x00, 
    0x30, 0x78, 0xfc, 0xfe, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7c, 0x38, 
  },
  //SPYMERA
  {
    0xc0, 0xe0, 0xf2, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xf2, 0xe0, 0xc0, 0x00, 
    0x0f, 0x1f, 0x3f, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x3f, 0x1f, 0x0f, 0x00, 
  },
  //XENAUCER
  {
    0x80, 0xc0, 0xe0, 0xf0, 0xf8, 0xfc, 0xfe, 0xfe, 0xfe, 0xfe, 0xfc, 0xf8, 0xf0, 0xe0, 0xc0, 0x80, 
    0x23, 0x77, 0x7f, 0x7f, 0xff, 0xff, 0x7f, 0x7f, 0x7f, 0x7f, 0xff, 0xff, 0x7f, 0x7f, 0x77, 0x23, 
  },
  
//NATURE//
  //BEETHRONE
  {
    0x30, 0xf8, 0xf8, 0xf8, 0xf8, 0xf8, 0xf0, 0xfc, 0xfe, 0xff, 0xfe, 0xfc, 0xfc, 0xfe, 0xff, 0x02, 
    0x01, 0x47, 0xef, 0x7f, 0x7f, 0xff, 0x7f, 0x7f, 0xff, 0x7f, 0x3f, 0x0f, 0x1f, 0x0f, 0x07, 0x00, 
  },
  //BUBBLUE
  {
    0x18, 0xfc, 0xfe, 0xfe, 0xfc, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfc, 0xf8, 0xf0, 0xe0, 
    0x06, 0x0f, 0x1f, 0x3f, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x3f, 0x1f, 0x0f, 
  },
  //BUNNERINA
  {
    0x00, 0x00, 0x00, 0xc0, 0xf8, 0xfc, 0xfe, 0xfe, 0xfe, 0xfc, 0xfe, 0xfe, 0x7c, 0x38, 0x00, 0x00, 
    0x00, 0x14, 0x3e, 0x3f, 0x7f, 0xff, 0x7f, 0x3f, 0x7f, 0xff, 0x7f, 0x3f, 0x3f, 0x14, 0x00, 0x00, 
  },
  //CHAMPANZON
  {
    0x00, 0x00, 0x80, 0xd8, 0xfc, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfc, 0xc0, 0x80, 0x00, 0x00, 
    0x06, 0x0f, 0x1f, 0x7f, 0xff, 0xff, 0xff, 0x7f, 0x7f, 0xff, 0xff, 0xff, 0x7f, 0x1f, 0x0f, 0x06, 
  },
  //CHLOROAR
  {
    0x20, 0x70, 0xf8, 0xf0, 0xe0, 0x80, 0xe0, 0xf0, 0xf8, 0xfc, 0xfc, 0xfc, 0xf8, 0xf0, 0xe0, 0xc0, 
    0x00, 0x00, 0x01, 0x0f, 0x1f, 0x3f, 0x7f, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0x6d, 
  },
  //CRIBBIT
  {
    0xe0, 0xf0, 0xf8, 0xfc, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfc, 0xf8, 0xf0, 0xc0, 0x00, 
    0x7d, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0x60, 
  },
  //DASHOUND
  {
    0x60, 0xf0, 0xe0, 0xc0, 0xc0, 0xc0, 0xc0, 0xdc, 0xfe, 0xfe, 0xfc, 0xfe, 0xfe, 0xfc, 0xf0, 0xc0, 
    0x78, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x63, 0x01, 
  },
  //MAYHAM
  {
    0xc0, 0xf0, 0xf8, 0xf8, 0xfc, 0xfe, 0xff, 0xfe, 0xfc, 0xfc, 0xfe, 0xfc, 0xfe, 0xff, 0xfe, 0x0c, 
    0x1e, 0x3f, 0x7f, 0xff, 0x7f, 0x7f, 0x7f, 0x7f, 0xff, 0x7f, 0x7f, 0xff, 0x7f, 0x3f, 0x07, 0x00, 
  },
  //NECRAWLER
  {
    0x00, 0x00, 0xe0, 0xf0, 0xf8, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xf8, 0xf0, 0xe0, 0x00, 0x00, 
    0x0a, 0x1f, 0x3f, 0x7f, 0x7f, 0xff, 0x7f, 0x7f, 0xff, 0x7f, 0xff, 0x7f, 0x7f, 0xff, 0x70, 0x00, 
  },
  //TERRUPTION
  {
    0x00, 0xc0, 0xe0, 0xf0, 0xf0, 0xf0, 0xf8, 0xfc, 0xfe, 0xfe, 0xfe, 0xfe, 0xfc, 0xf8, 0xe0, 0x00, 
    0x06, 0x0f, 0x1f, 0x3f, 0x7f, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0x6f, 0x0f, 0x06, 0x00, 
  },

//MYSTIC//
  //CHIVAMPERA
  {
    0xf0, 0xf8, 0xfc, 0xfe, 0xff, 0xff, 0xfe, 0xfc, 0xf8, 0xfc, 0xfe, 0xff, 0xff, 0x3e, 0x04, 0x00, 
    0x01, 0x03, 0x27, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x3f, 0x1f, 0x07, 0x00, 0x00, 0x00, 
  },
  //DUALDRA
  {
    0xe0, 0xf0, 0xf8, 0xfc, 0xfe, 0xfe, 0xff, 0xfe, 0xfe, 0xfe, 0xff, 0xfe, 0xfe, 0xfc, 0xf8, 0xf0, 
    0x03, 0x0f, 0x1f, 0x3f, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x3b, 0x01, 0x00, 
  },
  //FAEFLUFF
  {
    0x38, 0x7c, 0xfe, 0xfe, 0xfe, 0xfc, 0xf8, 0xf0, 0xf8, 0xfc, 0xfe, 0xfe, 0xfe, 0xfc, 0xb8, 0x00, 
    0x06, 0x0f, 0x1f, 0x3f, 0x3f, 0x1f, 0x3f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x3f, 0x1f, 0x0f, 0x00, 
  },
  //GRIFELIOS
  {
    0xda, 0xff, 0xfe, 0xfc, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfe, 0xfc, 0xf8, 0xf0, 0xe0, 0x80, 
    0x3d, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x63, 0x01, 
  },
  //MAUROAH
  {
    0xc0, 0xe0, 0xf0, 0xe0, 0xf0, 0xf8, 0xfc, 0xfe, 0xff, 0xfe, 0xfc, 0xfc, 0xfe, 0xff, 0xfe, 0x00, 
    0x3b, 0x7f, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x7f, 0xff, 0xff, 0x7f, 0x7f, 0xff, 0xff, 0xf7, 0x60, 
  },
  //PEGSHIRE
  {
    0x00, 0x80, 0xc0, 0xe0, 0xf0, 0xf8, 0xf8, 0xf8, 0xfc, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xf8, 
    0x07, 0x0f, 0x7f, 0xff, 0xff, 0x7f, 0xff, 0xff, 0x7f, 0xff, 0xff, 0x7f, 0xff, 0xff, 0x7f, 0x00, 
  },
  //POLTERROR
  {
    0x00, 0xe0, 0xf0, 0xf8, 0xfc, 0xfe, 0xfe, 0xff, 0xff, 0xff, 0xfe, 0xfe, 0xfc, 0xf8, 0xf0, 0xe0, 
    0x0c, 0x1f, 0x3f, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x3b, 
  },
  //RAVUACK
  {
    0x80, 0xc0, 0x80, 0xc0, 0xe4, 0xfe, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfe, 0xe4, 0xc0, 0x80, 
    0x03, 0x07, 0x0f, 0x1f, 0x3f, 0x7f, 0xff, 0xff, 0x7f, 0x7f, 0xff, 0xff, 0x4f, 0x03, 0x07, 0x03, 
  },
  //SCARDRA
  {
    0xc0, 0xe0, 0xf0, 0xf8, 0xf0, 0xf0, 0xf8, 0xfc, 0xfe, 0xff, 0xff, 0xff, 0xfe, 0xfc, 0xf0, 0xc0, 
    0x1f, 0x3f, 0x1f, 0x1f, 0x3f, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x6d, 0x00, 
  },
  //SQUEAMASK
  {
    0xc0, 0xe8, 0xfc, 0xfe, 0xfe, 0xff, 0xfe, 0xfc, 0xfc, 0xfc, 0xfe, 0xff, 0xfe, 0xfe, 0xfc, 0xc8, 
    0x00, 0x01, 0x4b, 0xff, 0x7f, 0x3f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x3f, 0x7f, 0xfd, 0x48, 
  },

//OMNI//
  //TRIKURN
  {
    0x00, 0xc0, 0xf4, 0xfe, 0xff, 0xfe, 0xfc, 0xfe, 0xff, 0xfe, 0xfc, 0xfe, 0xff, 0x7e, 0x34, 0x00, 
    0x0f, 0x1f, 0x3f, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x3f, 0x1f, 0x0f, 0x00, 0x00, 
  }
};

void drawPawn(Species species, int16_t x, int16_t y, bool foreColor, Direction direction) 
{
  bool backColor = (foreColor == BLACK) ? WHITE : BLACK;

  uint8_t drawSpecies = static_cast<uint8_t>(species);
  uint8_t facingDirection = static_cast<uint8_t>(direction);
  ardbitmap.drawBitmap(x, y, pawnSpriteBackground[drawSpecies], 16, 16, backColor, ALIGN_NONE, facingDirection);
  ardbitmap.drawBitmap(x, y, pawnSprite[drawSpecies], 16, 16, foreColor, ALIGN_NONE, facingDirection);
}
